{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/userFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","onChange","target","value","type","GifGridItem","title","id","url","className","key","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","gif","images","downsized","console","log","GifGrid","loading","object","setobject","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4KAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAShD,OACE,0BAAMC,SALa,SAACC,GACpBA,EAAEC,iBACFN,EAAc,CAACE,MAIb,2BAAOK,SATc,SAACF,GACxBF,EAAcE,EAAEG,OAAOC,QAQcC,KAAK,OAAOD,MAAOP,MCX/CS,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKH,EAAII,IAAKH,EAAKI,IAAKN,IAC7B,2BAAIA,K,uBCNGO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,mCAETP,EACJ,mFAGAQ,UAAUF,GAPS,kBASAG,MAAMT,GATN,cASbU,EATa,gBAWIA,EAAKC,OAXT,uBAWXC,EAXW,EAWXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CAAEjB,MAAOiB,EAAIjB,MAAOC,GAAIgB,EAAIhB,GAAIC,IAAKe,EAAIC,OAAOC,UAAUjB,QAbhD,kBAeZa,GAfY,kCAiBnBK,QAAQC,IAAR,MAjBmB,0DAAH,sDCIPC,EAAU,SAAC,GAAkB,IAAD,ECDb,SAACd,GAAc,IAAD,EACZnB,mBAAS,CAAEkC,SAAS,EAAMT,KAAM,KADpB,mBACjCU,EADiC,KACzBC,EADyB,KAMxC,OAJAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAACC,GAAD,OAAUH,EAAU,CAAEF,SAAS,EAAOT,KAAMc,SAClE,CAACpB,IACJY,QAAQC,IAAIG,GACLA,EDJ2BK,CADK,EAAfrB,UAChBe,EAD+B,EAC/BA,QAAeL,EADgB,EACtBJ,KAEjB,OACE,oCACGS,EACC,yBAAKlB,IAAI,0BAA0BC,IAAI,YAEvC,8BAEF,yBAAKH,UAAU,YACZe,EAAOF,KAAI,SAACc,GAAD,OACV,kBAAC,EAAD,eAAa1B,IAAK0B,EAAI7B,IAAQ6B,UEZ3BC,EAAe,WAAO,IAAD,EACI1C,mBAAS,CAAC,cADd,mBACzB2C,EADyB,KACb5C,EADa,KAEhC,OACE,6BACE,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACG4C,EAAWhB,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASJ,IAAKI,EAAUA,SAAUA,UCR5CyB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.eae564d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const changeInputValue = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCategories([inputValue]);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input onChange={changeInputValue} type=\"text\" value={inputValue}></input>\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = { setCategories: PropTypes.func.isRequired };\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, id, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img key={id} src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  const APIkey = \"ShT1Au2Iv7oo9Satjzy8YQaN8cY5WUMa\";\r\n\r\n  const url =\r\n    \"https://api.giphy.com/v1/gifs/search?api_key=\" +\r\n    APIkey +\r\n    \"&q=\" +\r\n    encodeURI(category);\r\n  try {\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((gif) => {\r\n      return { title: gif.title, id: gif.id, url: gif.images.downsized.url };\r\n    });\r\n    return gifs;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/userFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { loading, data: images } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <img src=\"./../assets/loading.gif\" alt=\"Loading\"></img>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className=\"cardGrid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img}></GifGridItem>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [object, setobject] = useState({ loading: true, data: [] });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setobject({ loading: false, data: imgs }));\r\n  }, [category]);\r\n  console.log(object);\r\n  return object;\r\n  //     useEffect(() => {\r\n  //     getGifs(category).then((imgs) => setImages(imgs));\r\n  //   }, [category]);}\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <hr></hr>\r\n      <AddCategory setCategories={setCategories}></AddCategory>\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category}></GifGrid>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}